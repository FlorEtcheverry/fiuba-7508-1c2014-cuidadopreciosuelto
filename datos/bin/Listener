#!/bin/bash

if [ "$INIT" != "true" ]
then 
	echo No se realizo la inicializacion correspondiente
	exit 1
fi

while [ 0 ]
do
touch $LOGDIR"/Listener".$LOGEXT

#Grabo numero de ciclo
numLog=`grep "Ciclo numero: "'.*$' "$LOGDIR"/Listener".$LOGEXT" | tail -1 | sed s-'.*\ Ciclo numero: \([0-9]\+\)-\1-' `

let numLog=numLog+1

$BINDIR/Logging Listener "Ciclo numero: $numLog" INFO

#Chequeo que haya algo para procesar o pasan cosas feas
shopt -s nullglob

archNovedades=($NOVEDIR/*)
cantArchProc=${#archNovedades[@]}
$BINDIR/Logging Listener "Cantidad de archivos de novedades: $cantArchProc" INFO

shopt -u nullglob

if [ $cantArchProc != 0 ] ; then

	#Chequeo el formato
	t_compras=1
	t_precios=1

	for arch in $NOVEDIR/* 
	do
		if [ "$arch" = "$NOVEDIR/"'*' ]; then continue; fi
		nombre=`basename "$arch"`
		t_compras=`echo "$nombre" | sed s-'^[^.]\+\.[^-\ ]\{3\}$-0-'`
		t_precios=`echo "$nombre" | sed s-'^[^-]\+\-[0-9]\{8\}\.[^-.]\+$-0-'`

		if [ "$t_compras" != 0 ] && [ "$t_precios" != 0 ] ; then
			$BINDIR/Logging Listener "Archivo: $nombre rechazado por formato invalido" ERR
				echo "$arch"

			$BINDIR/Mover "$arch" "$RECHDIR" Listener
			continue	
			#formato
		elif [ "$t_compras" = 0 ] ; then
			usuario=`echo "$nombre" | sed s-'^\([^.]\+\)\.[^-\ ]\{3\}$-\1-'`
		
			existe=0
			existe=`grep -c '^[^;]\+;[^;]\+;'"$usuario"';[01];\?[^;]*$' $MAEDIR/asociados.mae`
			if [ "$existe" = 0 ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque usuario es inexistente" ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener	
				continue
				#usuario no en campo de asociados
			fi

			#lo acepto
			$BINDIR/Logging Listener "Archivo de lista de compras: $nombre aceptado" INFO
			$BINDIR/Mover "$arch" "$ACEPDIR" Listener	

		elif [ "$t_precios" = 0 ] ; then
			anioIngr=`echo "$nombre" | sed s-'^.*\-\([0-9]\{4\}\)[0-9]\{4\}\.[^-]*$-\1-'`
			mesIngr=`echo "$nombre" | sed s-'^.*\-[0-9]\{4\}\([0-9]\{2\}\)[0-9]\{2\}\.[^-]*$-\1-'`
			diaIngr=`echo "$nombre" | sed s-'^.*\-[0-9]\{6\}\([0-9]\{2\}\)\.[^-]*$-\1-'`

			#chequeo validez de fecha
			f="$anioIngr-$mesIngr-$diaIngr"
			date --date="$f" > tmp~ 2>&1
			invalida=`grep -c "inv" tmp~`
			rm tmp~
			if [ "$invalida" -gt "0" ]; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque la fecha es falsa." ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener	
				continue		
			fi

			anioAct=`date +%y`
			let anioAct=2000+$anioAct

			mesAct=`date +%m`
			diaAct=`date +%e`

			if [ "$anioIngr" -gt "$anioAct" ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque la fecha es invalida." ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener	
				continue		
				#fecha invalida
			elif [ "$anioIngr" -eq "$anioAct" ] && [ "$mesIngr" -gt "$mesAct" ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque la fecha es invalida." ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener
				continue
				#fecha invalida
			elif [ "$anioIngr" -eq "$anioAct" ] && [ "$mesIngr" -eq "$mesAct"  ] && [ "$diaIngr" -gt "$diaAct" ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque la fecha es invalida." ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener		
				continue	
				#fecha invalida
			fi


			if [ "$anioIngr" -lt 2014 ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque la fecha es invalida (Antes de inicio del sistema)" ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener
				continue
				#fecha invalida
			fi


			usuario=`echo "$nombre" | sed s-'^[^\-]*\-[0-9]\{8\}\.\([^-]*\)$-\1-'`

			esColab=2
			#HIPOTESIS: si hay dos usuarios iguales y alguno es colaborador, consideramos archivo valido
			while read -r reg ; do
	   			esColab=`echo "$reg" | cut -s -f4 -d';'`
				if [ "$esColab" -eq 1 ] ; then
					break
				fi 
			done < <(grep '^[^;]\+;[^;]\+;'"$usuario"';[01];\?[^;]*$' $MAEDIR/asociados.mae)

			if [ "$esColab" != 1 ] ; then
				$BINDIR/Logging Listener "Archivo: $nombre rechazado porque colaborador es inexistente" ERR
				$BINDIR/Mover "$arch" "$RECHDIR" Listener
				continue	
				#usuario no existe o no es colaborador
			fi

			$BINDIR/Logging Listener "Archivo de lista de precios: $nombre aceptado" INFO
			$BINDIR/Mover "$arch" "$MAEDIR/precios" Listener	

		fi
	done
fi


#lanzo rating o masterlist si es necesario

shopt -s nullglob

files=($MAEDIR/precios/*.*)
if [ "${#files[@]}" != "0" -a "$files" != "$MAEDIR/precios/" ] ; then
	echo ""
	pidRat=""
	pidRat=`ps | grep  "Rating" | grep -e grep -v`
	pidRat=`echo $pidRat | sed 's-^\([^\ ]\+\)\ .*$-\1-g'` 
	pidMstLst=""
	pidMstLst=`ps | grep  "Masterlist" | grep -e grep -v`
	pidMstLst=`echo $pidMstLst | sed 's-^\([^\ ]\+\)\ .*$-\1-g'` 

	if [ -z "$pidRat" -a -z "$pidMstLst" ] ; then
		tmp=`$BINDIR/Start Masterlist`
		if [ $? = 0 ] ; then
			pid=`ps -ef | grep  "Masterlist" | grep -e grep -v`
			pid=`echo $pid | sed 's-^[^\ ]\+\ \([0-9]\+\)\ .*$-\1-g'` 
			$BINDIR/Logging Listener "Masterlist corriendo bajo el numero: $pid" INFO
			#grabar en log
		else
			$BINDIR/Logging Listener "No se pudo lanzar Masterlist" WAR
		fi			
	fi
fi


files=($ACEPDIR/*.???)
if [ ${#files[@]} -gt 0 ] ; then

	pidRat=`ps | grep  "Rating" | grep -e grep -v`
	pidRat=`echo $pidRat | sed 's-^\([^\ ]\+\)\ .*$-\1-g'` 
	pidMstLst=`ps | grep  "Masterlist" | grep -e grep -v`
	pidMstLst=`echo $pidMstLst | sed 's-^\([^\ ]\+\)\ .*$-\1-g'` 

	if [ "$pidRat" = "" ] && [ "$pidMstLst" = "" ] ; then
		tmp=`$BINDIR/Start Rating`
		if [ $? = 0 ] ; then
			pid=`ps -ef | grep "Rating" | grep -e grep -v`
			pid=`echo $pid | sed 's-^[^\ ]\+\ \([0-9]\+\)\ .*$-\1-g'` 
			$BINDIR/Logging Listener "Rating corriendo bajo el numero: $pid" INFO
			#grabar en log
		else
			$BINDIR/Logging Listener "No se pudo lanzar Rating" WAR
		fi
	fi
fi

shopt -u nullglob

sleep 10

done

$BINDIR/Logging Listener "Fin de Listener" INFO
