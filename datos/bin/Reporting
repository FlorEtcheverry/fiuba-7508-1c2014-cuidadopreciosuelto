#! /usr/bin/perl

# ------------
# INICIO MAIN.
# ------------

system("clear");

if ($ENV{INIT} eq ''){ print "No se realizo la inicializacion correspondiente\n"; exit; }

$opcion = "";
while ($opcion ne "-exit")
{
        # print "\n\n";
        print "----------------------------------------------------------------------------------\n";
        print "1ra entrada --> Opcion de proceso ('-a' para mas informacion | '-exit' para salir)\n";
        print "2da entrada --> Filtro de usuario [y/n]\n";
        print "3ra entrada --> Filtro de Supermercado [y/n]\n";
        print "4ta entrada --> Opcion de grabado ('-w') [y/n]\n";
        print "----------------------------------------------------------------------------------\n";

        print "1ra entrada: ";
        $opcion = <STDIN>;
        chomp($opcion);

        if ($opcion ne "-exit" and  $opcion ne "-a" and $opcion ne "-w" and $opcion ne "-r" and $opcion ne "-m" and $opcion ne "-d" and $opcion ne "-f" and $opcion ne "-mr" and $opcion ne "-dr")
        {
                print "No existe comando '$opcion'. Por favor ingrese '-a' para Ayuda.\n";
                $opcion = <STDIN>;
                next;
        }
#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres
        if ($opcion eq "-a")
        {
                &MostrarMenuA_Ayuda;
        }
        
        if ($opcion eq "-r" or $opcion eq "-m" or $opcion eq "-d" or $opcion eq "-f" or $opcion eq "-mr" or $opcion eq "-dr")
        {

                open(SUPER, $ENV{GRUPO01}.$ENV{MAEDIR}."\/super.mae") || die "ERROR: el archivo de super.mae no existe";
                
                # -----------------------------------
                # Cargamos la Lista de Supermercados (el filtro se aplica mas tarde).
                # -----------------------------------
				
#HIPOTESIS: NO hay super id que valga 0.
				
                %hashSuper = (0, "Informacion");
                
                while ($lineaEntrada = <SUPER>)
                {
                        @arrayData = split(";", $lineaEntrada);
                        $id = $arrayData[0];
                        $nombre_provincia = $arrayData[2]."-".$arrayData[1];
                        $hashSuper{$id} = $nombre_provincia;
                }   
				
		
               $pathLP = $ENV{GRUPO01}.$ENV{INFODIR}."\/pres";
                
		
                print "2da entrada:  [y/n] \n";
		$opcionF = <STDIN>;
                chomp($opcionF);

		$filtroUsuario="";
		if ( $opcionF eq "y" ) {
			$filtroUsuario = &mostrarYCargarMenuFiltroUsuario($pathLP);
		}else
		{
			print "No se usara un filtro de usuarios.\n"
		}	

		$filtroSuper="";
		if ( $opcion ne "-f"){
		        print "3ra entrada:  [y/n] \n";
			$opcionF = <STDIN>;
		        chomp($opcionF);
			if ( $opcionF eq "y" ) {
				$filtroSuper = &mostrarYCargarMenuFiltroSuper(\%hashSuper);
			}else
			{
				print "No se usara un filtro de supermercados.\n";
			}
		}else{ print "3ra entrada: Con opcion -f no se permite el uso de filtros por supermercado-provincia. \n"; }

                print "4ta entrada [y/n]: ";
                $opcionDeGrabado = <STDIN>;
                chomp($opcionDeGrabado);
        
                # -----------------------------------------------
                # Cargamos en un array todas las listas del path considerando el filtro de usuario.
                # -----------------------------------------------

                @arrayLP = &CargarArrayLP($pathLP, $filtroUsuario);    
                
                # ----------------------------------------
                # Segun la opcion ingresa muestro la info.
                # ----------------------------------------
                if ($opcion eq "-r")
                {
                        &MostrarMenuR_Referencia(\@arrayLP, $#arrayLP, \%hashSuper, $opcionDeGrabado, $filtroSuper);
                }
        
                if ($opcion eq "-m")
                {	
			if ($opcionDeGrabado eq "y"){
                                &MostrarMenuM_MenorPrecioArchivo(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                        else{
                                &MostrarMenuM_MenorPrecioPantalla(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                } 

                if ($opcion eq "-d")
                {
                        if ($opcionDeGrabado eq "y"){
                                &MostrarMenuDArchivo(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                        else{
                                &MostrarMenuDPantalla(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                }
        
                if ($opcion eq "-f")
                {
                        &MostrarMenuF_Faltante(\@arrayLP, $#arrayLP, \%hashSuper, $filtroSuper, $opcionDeGrabado);
                }

                if ($opcion eq "-mr")
                {
                        if ($opcionDeGrabado eq "y"){
                                &MostrarMenuMRArchivo(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                        else{
                                &MostrarMenuMRPantalla(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                }
                
                if ($opcion eq "-dr")
                {
                        if ($opcionDeGrabado eq "y"){
                                &MostrarMenuDR_DondeComprarYReferenciaArch(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                        else{
                                &MostrarMenuDR_DondeComprarYReferenciaPantalla(\@arrayLP, $filtroSuper, \%hashSuper ,$#arrayLP);
                        }
                }

 #               close (LISTA_PRESUPUESTADA); #QUE CARAJO ES ESTO???
                close (SUPER);
        }
}

system ("clear");
# ---------
# FIN MAIN.
# ---------

sub mostrarYCargarMenuFiltroUsuario
{

	my @ListasPres = ();

	if (opendir(listPresupuesto, $_[0]))
	{	
		@ListasPres = readdir(listPresupuesto);
		close(listPresupuesto);
	}else{
	

	#ver como usar el logging aca



	}
	
	my @datosUsuarios = ();
	$filtroUsersAux = "";
	
	print "Seleccione los usuarios deseados de la siguiente lista: \n";
	
	for (my $i=0; $i<=$#ListasPres; $i++)
   	{       
		next if ($ListasPres[$i] eq "." || $ListasPres[$i] eq "..");
		$posPunto=index($ListasPres[$i],".");
		print "Usuario posible: ".substr($ListasPres[$i],0,$posPunto) ."\n";
    	}
	
	print "Para elegir los usuarios a considerar ingreselos y presione enter entre cada uno y presione CTRL+D para terminar \n";
	
	my @filtroUser=<STDIN>;
	
	print "\n\n";

	for (my $i=0; $i<=$#filtroUser; $i++)
    	{       
		$filtroUsersAux = $filtroUsersAux.@filtroUser[$i];
   	}
	
	$filtroUsersAux;
}



sub mostrarYCargarMenuFiltroSuper
{

	#recorrer hash
	
	print "Seleccione los super_provincia deseados de la siguiente lista: \n";
	(%my_hash)=@_;
	foreach $key (keys %hashSuper){
		print "Supermercado posible: $_[0]{$key} \n";
	}
	
	print "Para elegir los supermercados a considerar ingreselos y presione enter entre cada uno y presione CTRL+D para terminar \n";

	$filtroSuperAux="";
	my @filtroSupers=<STDIN>;
	
	for (my $i=0; $i<=$#filtroSupers; $i++)
   	{       
		$filtroSuperAux = $filtroSuperAux.@filtroSupers[$i];
	}
	
	$filtroSuperAux;
}




# ---------------------------------------------------------------------------------------------
# SUB, Cargo el array de Listas Presupuestadas evitando el nivel anterior (.) y posterior (..).
# ---------------------------------------------------------------------------------------------
sub CargarArrayLP
{
        @array = ();

        if (opendir(DIR, $_[0]))
        {
                @arrayListas = readdir(DIR);
                close(DIR);
        }

        for (my $i=0; $i<=$#arrayListas; $i++)
        {   
                next if ($arrayListas[$i] eq "." || $arrayListas[$i] eq "..");
                #hay filtro de usuario
                if ($_[1] ne "")
                {	
			$posPunto = index($arrayListas[$i],".");
			$usuario = substr($arrayListas[$i],0,$posPunto);
					
                        if ($_[1] =~ /$usuario/)
                        {
                                push(@array, $ENV{GRUPO01}.$ENV{INFODIR}."/pres/".$arrayListas[$i]);
                        }
                }
                else#no se filtra de usuario -> cargo todo
                {
                        if ($arrayListas[$i] =~ /[^.]*\..../)
                        {
                                push(@array, $ENV{GRUPO01}.$ENV{INFODIR}."/pres/".$arrayListas[$i]);
                        }
                }
        }

        return (@array);
}

# ------------------------------
# SUB, Muestra el Menu de Ayuda.
# ------------------------------
sub MostrarMenuA_Ayuda
{
        system("clear");

        print "----------------------------------------------------------------------------------------\n";
        print "1ra entrada:\n";
        print "         '-a' --> Ayuda.\n";
        print "         '-r' --> Precio de referencia (Precios Cuidados).\n";
        print "         '-m' --> Menor precio.\n";
        print "         '-d' --> Donde Comprar.\n";
        print "         '-f' --> Faltante.\n";
        print "         '-exit' --> Salir.\n";
        print "2da entrada:\n";
        print "         Filtro de Usuario\n";
        print "3ra entrada:\n";
        print "         Filtro de ID de Supermercado\n";
	print "4ta entrada:\n";
        print "         '-w' [y/n] --> Opcion de Grabado\n";
        print "                        [y] no muestra por pantalla y graba en archivo de salida.\n";
        print "                        [n] muestra por pantalla.\n";
        print "----------------------------------------------------------------------------------------\n\n";
}

# -----------------------------------------------------------------
# SUB, Muestra la info de precios de Referencia (Precios Cuidados).
# -----------------------------------------------------------------
sub MostrarMenuR_Referencia
{
        system("clear");

        if ($_[3] eq "y")
        {
                ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
                $year += 1900;
                $mon++;
                $ext = $year.$mon.$mday.$hour.$min.$sec;

                $rutaSalida = $ENV{INFODIR}."/info.".$ext;
                open(SALIDA,">$rutaSalida");
        }

        for ($i=0; $i<=$_[1]; $i++)
        {
                if ($_[3] eq "y")
                {
                        print SALIDA "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                }
                else
                {
                        print "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                }

                open (LISTA, $_[0][$i]);
                $infoSalida = "";
                
                while ($linea = <LISTA>)
                {
                        chomp($linea);
						
			my @datosLinea = split (";", $linea);
						
			#super id menor a 100 entonces es precio de referencia
                        if ($datosLinea[2] < 100 )
                        {
                                my @arrayData = split(";", $linea);
				my $Super_provLinea = $_[2]{$arrayData[2]};
				#si el super-prov de la linea encaja en el filtro lo imprimo
				$posSuper=index($_[4],"$Super_provLinea");
				if ( (($posSuper >= 0) or ($_[4] eq "")) and ( "$Super_provLinea" ne "" ) ){
					if ($_[3] eq "y")
					{
						$infoSalida = $infoSalida."$arrayData[0] \| $arrayData[1] \| $arrayData[3] \| $arrayData[4] \| $_[2]{$arrayData[2]}\n";
					}
					else
					{
						print "$arrayData[0] \| $arrayData[1] \| $arrayData[3] \| $arrayData[4] \| $_[2]{$arrayData[2]}\n";
					}
				}
                        }
                }

                if ($_[3] eq "y")
                {
                        print SALIDA "$infoSalida\n";
                }else{ 
			print "\n";
		}
		
                close(LISTA);
        }

        if ($_[3] eq "y")
        {
                close(SALIDA);
        }
}

# ------------------------------------------------------------------
# SUB, Muestra la info de Menor Precio (omite los Precios Cuidados).
# ------------------------------------------------------------------
#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

sub MostrarMenuM_MenorPrecioArchivo
{

        ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
        $year += 1900;
        $mon++;
        $ext = $year.$mon.$mday.$hour.$min.$sec;
        		$rutaSalida = $ENV{INFODIR}."/info.".$ext;
                open(SALIDA,">$rutaSalida");

        for ( my $i=0; $i<=$_[3]; $i++ ){

        print SALIDA "\nNRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                	@arrayLineaProducto = split(";", $linea);
			my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
			#si el super-prov de la linea encaja en el filtro lo imprimo
						$posProv=index($_[1],$Super_provLinea);

			if ( (((("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )){
						
		                #Me fijo si es de precios cuidados y lo salteo.
		                if ( $arrayLineaProducto[2] < 100 ){
		                        next;
		                }
		                #Ahora si no es precio cuidado:
		                #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash, etc.
		                if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
		                        $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
		                        $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
		                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
		                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
		                }#si esta obviamente comparo y si el precio es mejor reemplazo
		                else{
		                        #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
		                        if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
		                                $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
		                                $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
		                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
		                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
		                        }
		                }
			}
		}
                
                
                #recorro hashes
                chomp(%hashPrecios);
                foreach $clave ( sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){
					print SALIDA "$hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $_[2]{$hashLugares{$clave}} \n";
                }

                close(LISTA);           
        }

        close(SALIDA);
}


sub MostrarMenuM_MenorPrecioPantalla
{
        for ( my $i=0; $i<=$_[3]; $i++ ){

        print "\nNRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
					my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
					#si el super-prov de la linea encaja en el filtro lo imprimo
								$posProv=index($_[1],$Super_provLinea);

			if ( (((("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )){

                        #Me fijo si es de precios cuidados y lo salteo.
                        if ( $arrayLineaProducto[2] < 100 ){
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash, etc.
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
                        }
			}		
                }

                #recorro hashes
				chomp(%hashPrecios);
                foreach $clave (sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){
                    print "$hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \|$hashPrecios{$clave}\| $_[2]{$hashLugares{$clave}} \n";
                }

                close(LISTA);           
        }
}

# ------------------------------------------
# SUB, Muestra la info de precios faltantes.
# ------------------------------------------
sub MostrarMenuF_Faltante
{
        system("clear");

        if ($_[4] eq "y")
        {
                ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
                $year += 1900;
                $mon++;
                $ext = $year.$mon.$mday.$hour.$min.$sec;
        
		$rutaSalida = $ENV{INFODIR}."/info.".$ext;
                open(SALIDA,">$rutaSalida");
        }

        for (my $i=0;$i<=$_[1];$i++)
        {
                if ($_[4] eq "y")
                {
                        print SALIDA "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                }
                else
                {
                        print "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                }

                open (LISTA, $_[0][$i]);
                $infoSalida = "";

                while ($linea = <LISTA>)
                {

                        chomp($linea);
                        $chr = chop($linea);
        
                        if ($chr eq ';')
                        {
                                $linea = $linea.";";
                                my @arrayData = split(";",$linea);
                        
                                # leo el ID del SUPER
                                if (length($arrayData[2]) > 0)
                                {       
                                        if ($_[4] eq "y")
                                        {
                                                $infoSalida = $infoSalida."$arrayData[0] \| $arrayData[1] \| $arrayData[3] \| $arrayData[4] \| $_[2]{$arrayData[2]}\n";
                                        }
                                        else
                                        {
                                                print "$arrayData[0] \| $arrayData[1] \| $arrayData[3] \| $arrayData[4] \| $_[2]{$arrayData[2]}\n";
                                        }
                                }
                                else
                                {
                                        if ($_[4] eq "y")
                                        {
                                                $infoSalida = $infoSalida."$arrayData[0] \| $arrayData[1] \| $arrayData[2] \| $arrayData[3] \| $arrayData[4]\n";
                                        }
                                        else
                                        {
                                                print "$arrayData[0] \| $arrayData[1] \| $arrayData[2] \| $arrayData[3] \| $arrayData[4]\n";
                                        }
                                }
                        }
                }

                if ($_[4] eq "y")
                {
                        print SALIDA "$infoSalida\n";
                }else{
	                print "\n";
		}
        }

        if ($_[4] eq "y")
        {
                close(SALIDA);
        }
}

#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Muestra la info plus precios de referencia, agrupados por lugar e imprime a un archivo.
# ------------------------------------------
sub MostrarMenuDR_DondeComprarYReferenciaArch
{

        ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
        $year += 1900;
        $mon++;
        $ext = $year.$mon.$mday.$hour.$min.$sec;
        $rutaSalida = $ENV{INFODIR}."/info.".$ext;
        open(SALIDA,">$rutaSalida");

        for ( my $i=0; $i<=$_[3]; $i++ ){

        print SALIDA "NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   --> $_[0][$i]\n";

                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashPreciosCuidados=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

					#obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
					my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
					#si el super-prov de la linea encaja en el filtro lo imprimo
								$posProv=index($_[1],$Super_provLinea);

			if ( (("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )  or ($arrayLineaProducto[2] < 100) ){

                        #Me fijo si es de precios cuidados, entonces SUPER ID debe ser menor a 100
                        #si lo es guardo el menor de los precios cuidados y saltear.
                        if ( $arrayLineaProducto[2] < 100 ){
                                if (! exists( $hashPreciosCuidados{$arrayLineaProducto[1]} ) ) {
                                        $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                }#si esta obviamente comparo y si el precio es mejor reemplazo
                                else{
                                        if ( $hashPreciosCuidados{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                                $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                        }
                                }
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
                        }
					}
                }

                #necesito hacer esta basura o no empieza a recorrer por el ppio de nuevo
                close (LISTA);
                open (LISTA, $_[0][$i]);
                
                #todavia estando en la misma lista de presupuestos
                #recorro de nuevo separando por lugares, mostrando el precio cuidado correspondiente y el menor precio que encontre antes
                my $Super_ID="";
                my $cambioLugar = 0;

                while($linea = <LISTA>){
                        @arrayLineaProducto = split(";", $linea);
                        

                        #el lugar viene dado por el super ID
                        if ($Super_ID eq ""){
                                $Super_ID = $arrayLineaProducto[2];
                                $cambioLugar = 1;
                        }else{
                                if ( $Super_ID eq $arrayLineaProducto[2] ){
                                        $cambioLugar = 0;
                                }else{  
					if ("$escribi" ne "false"){ print SALIDA "\n";}        
                                        $Super_ID = $arrayLineaProducto[2];
                                        $cambioLugar = 1;
					$escribi="false";
                                }
                        }

                        my $observ="";
						chomp(%hashPrecios);
						chomp(%hashPreciosCuidados);
                        if ( $cambioLugar ){
                        #recorro hashLugares por claves, si encuentro un value coincidente uso la clave para hash precios e imprimo ; luego elimino ese producto de ambos hashes
                                foreach $clave (sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){

                                        if ( $hashLugares{$clave} eq $Super_ID ) {
                                                if ( $hashPrecios{$clave} > $hashPreciosCuidados{$clave} )
                                                        { $observ="**" ;}
                                                if ( $hashPrecios{$clave} <= $hashPreciosCuidados{$clave} )
                                                        { $observ="*" ;}
                                                if ( $hashPreciosCuidados{$clave} eq "" )
                                                        { $observ="***" ;}

#NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   
										
                                        print SALIDA "$_[2]{$Super_ID} \| $hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \|$hashPrecios{$clave}\| $hashPreciosCuidados{$clave} \| $observ \n";
						$escribi="true";
                                        #necesarios si no ordeno el archivo por lugares
                                        delete($hashPrecios{$clave});
                                        delete($hashPrecios{$clave});
                                        }
                                }
                        }

                }

                close(LISTA);           
        }

        close(SALIDA);
}


#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Idem anterior pero esta imprime por pantalla. De hecho es copiada tal cual y solo cambio que mando los prints a pantalla y saco las cosas del archivo de salida.
# ------------------------------------------

sub MostrarMenuDR_DondeComprarYReferenciaPantalla
{

        for ( my $i=0; $i <= $_[3]; $i++ ){

                print "NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   --> $_[0][$i]\n";
                
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashPreciosCuidados=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
					my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
					#si el super-prov de la linea encaja en el filtro lo imprimo
								$posProv=index($_[1],$Super_provLinea);

			if ( (("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )  or ($arrayLineaProducto[2] < 100) ){

                        #Me fijo si es de precios cuidados, entonces SUPER ID debe ser menor a 100
                        #si lo es guardo el menor de los precios cuidados y saltear.
                        if ( $arrayLineaProducto[2] < 100 ){
                                if (! exists( $hashPreciosCuidados{$arrayLineaProducto[1]} ) ) {
                                        $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                }#si esta obviamente comparo y si el precio es mejor reemplazo
                                else{
                                        if ( $hashPreciosCuidados{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                                $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                        }
                                }
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
						}
					}
                }

                #necesito hacer esta basura o no empieza a recorrer por el ppio de nuevo
                close (LISTA);
                open (LISTA, $_[0][$i]);
                
                #todavia estando en la misma lista de presupuestos
                #recorro de nuevo separando por lugares, mostrando el precio cuidado correspondiente y el menor precio que encontre antes
                my $Super_ID="";
                my $cambioLugar = 0;

                while($linea = <LISTA>){
                        @arrayLineaProducto = split(";", $linea);
                        #el lugar viene dado por el super ID
                        if ($Super_ID eq ""){
                                $Super_ID = $arrayLineaProducto[2];
                                $cambioLugar = 1;
                        }else{
                                if ( $Super_ID eq $arrayLineaProducto[2] ){
                                        $cambioLugar = 0;
                                }else{
                                        if ($escribi ne "false"){ print "\n";}     
                                        $Super_ID = $arrayLineaProducto[2];
                                        $cambioLugar = 1;
					$escribi="false";
                                }
                        }

                        my $observ="";

                        if ( $cambioLugar ){
						chomp(%hashPrecios);
						chomp(%hashPreciosCuidados);
                        #recorro hashLugares por claves, si encuentro un value coincidente uso la clave para hash precios e imprimo ; luego elimino ese producto de ambos hashes
                                foreach $clave ( sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){

                                        if ( $hashLugares{$clave} eq $Super_ID ) {
                                                if ( $hashPrecios{$clave} > $hashPreciosCuidados{$clave} )
                                                        { $observ="**" ;}
                                                if ( $hashPrecios{$clave} <= $hashPreciosCuidados{$clave} )
                                                        { $observ="*" ;}
                                                if ( $hashPreciosCuidados{$clave} eq "" )
                                                        { $observ="***" ;}

#NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   
                                        print "$_[2]{$Super_ID} \| $hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $hashPreciosCuidados{$clave} \| $observ \n";
						$escribi="true";
                                        #necesarios si no ordeno el archivo por lugares
                                        delete($hashPrecios{$clave});
                                        delete($hashPrecios{$clave});
                                        }
                                }
                        }

                }

                close(LISTA);           
        }

}


#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Muestra por menor precios plus el precio de referencia, imprime a un archivo
# ------------------------------------------
sub MostrarMenuMRArchivo
{

        ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
        $year += 1900;
        $mon++;
        $ext = $year.$mon.$mday.$hour.$min.$sec;
        		$rutaSalida = $ENV{INFODIR}."/info.".$ext;
                open(SALIDA,">$rutaSalida");

        for ( my $i=0; $i<=$_[3]; $i++ ){

                print SALIDA "\n NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   --> $_[0][$i]\n";
        
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashPreciosCuidados=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
					my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
					#si el super-prov de la linea encaja en el filtro lo imprimo
								$posProv=index($_[1],$Super_provLinea);

			if ( (("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" ) or ($arrayLineaProducto[2] < 100) ){

                        #Me fijo si es de precios cuidados, entonces SUPER ID debe ser menor a 100
                        #si lo es guardo el menor de los precios cuidados y saltear.
                        if ( $arrayLineaProducto[2] < 100 ){
                                if (! exists( $hashPreciosCuidados{$arrayLineaProducto[1]} ) ) {
                                        $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                }#si esta obviamente comparo y si el precio es mejor reemplazo
                                else{
                                        if ( $hashPreciosCuidados{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                                $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                        }
                                }
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
                        }
					}
                }
                
                #todavia estando en la misma lista de presupuestos
                #recorro los hashes mostrando lo pedido
				chomp(%hashPrecios);
				chomp(%hashPreciosCuidados);
                foreach $clave ( sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){
                        if ( $hashPrecios{$clave} > $hashPreciosCuidados{$clave} )
                                { $observ="**" ;}
                        if ( $hashPrecios{$clave} <= $hashPreciosCuidados{$clave} )
                                { $observ="*" ;}
                        if ( $hashPreciosCuidados{$clave} eq "" )
                                { $observ="***" ;}

#NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   
						
                        print SALIDA "$_[2]{$hashLugares{$clave}} \| $hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $hashPreciosCuidados{$clave} \| $observ \n";
                }

                close(LISTA);           
        }

        close(SALIDA);
}

#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Idem anterior pero muestra por pantalla
# ------------------------------------------
sub MostrarMenuMRPantalla
{

        for ( my $i=0; $i<=$_[3]; $i++ ){

                print "\n NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   --> $_[0][$i]\n";
        
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashPreciosCuidados=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
					my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
					#si el super-prov de la linea encaja en el filtro lo imprimo
								$posProv=index($_[1],$Super_provLinea);

			if ( (("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )  or ($arrayLineaProducto[2] < 100) ){

                        #Me fijo si es de precios cuidados, entonces SUPER ID debe ser menor a 100
                        #si lo es guardo el menor de los precios cuidados y saltear.
                        if ( $arrayLineaProducto[2] < 100 ){
                                if (! exists( $hashPreciosCuidados{$arrayLineaProducto[1]} ) ) {
                                        $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                }#si esta obviamente comparo y si el precio es mejor reemplazo
                                else{
                                        if ( $hashPreciosCuidados{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                                $hashPreciosCuidados{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                        }
                                }
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
                        }
					}
                }
                
                #todavia estando en la misma lista de presupuestos
                #recorro los hashes mostrando lo pedido
				chomp(%hashPrecios);
				chomp(%hashPreciosCuidados);
                foreach $clave ( sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){
                        if ( $hashPrecios{$clave} > $hashPreciosCuidados{$clave} )
                                { $observ="**" ;}
                        if ( $hashPrecios{$clave} <= $hashPreciosCuidados{$clave} )
                                { $observ="*" ;}
                        if ( $hashPreciosCuidados{$clave} eq "" )
                                { $observ="***" ;}

#NOMBRE_SUPER-PROVINCIA \| NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| PRECIO de REFERENCIA \| Observaciones   
                        print "$_[2]{$hashLugares{$clave}} \| $hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $hashPreciosCuidados{$clave} \| $observ \n";
                }

                close(LISTA);           
        }

}


#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Muestra la info, agrupados por lugar e imprime a un archivo.
# ------------------------------------------
sub MostrarMenuDArchivo
{

        ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime;
        $year += 1900;
        $mon++;
        $ext = $year.$mon.$mday.$hour.$min.$sec;
        		$rutaSalida = $ENV{INFODIR}."/info.".$ext;
                open(SALIDA,">$rutaSalida");

        for ( my $i=0; $i<=$_[3]; $i++ ){

        print SALIDA "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

                    #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
                    @arrayLineaProducto = split(";", $linea);
			my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
			#si el super-prov de la linea encaja en el filtro lo imprimo
			$posProv=index($_[1],$Super_provLinea);

			if ( (((("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )){

                        #Me fijo si es de precios cuidados y lo salteo.
                        if ( $arrayLineaProducto[2] < 100 ){
                                next;
                        }
                        #Ahora si no es precio cuidado:
                        #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash, etc.
                        if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
                                $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
                                $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                        }#si esta obviamente comparo y si el precio es mejor reemplazo
                        else{
                                #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
                                if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
                                        $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
                                        $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
                                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
                                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
                                }
                        }
					}
                }

                #necesito hacer esta basura o no empieza a recorrer por el ppio de nuevo
                close (LISTA);
                open (LISTA, $_[0][$i]);
                
                #todavia estando en la misma lista de presupuestos
                #recorro de nuevo separando por lugares, mostrando el precio cuidado correspondiente y el menor precio que encontre antes
                my $Super_ID="";
                my $cambioLugar = 0;
		$escribi="false";
                while($linea = <LISTA>){
                        @arrayLineaProducto = split(";", $linea);
                        

                        #el lugar viene dado por el super ID
                        if ($Super_ID eq ""){
                                $Super_ID = $arrayLineaProducto[2];
                                $cambioLugar = 1;
                        }else{
                                if ( $Super_ID eq $arrayLineaProducto[2] ){
                                        $cambioLugar = 0;
                                }else{                                        
					if ($escribi ne "false"){ print SALIDA "\n";}
                                        $Super_ID = $arrayLineaProducto[2];
                                        $cambioLugar = 1;
					$escribi="false";
                                }
                        }

                        my $observ="";

                        if ( $cambioLugar ){
								chomp(%hashPrecios);
                        #recorro hashLugares por claves, si encuentro un value coincidente uso la clave para hash precios e imprimo ; luego elimino ese producto de ambos hashes
                                foreach $clave (sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){

                                        if ( $hashLugares{$clave} eq $Super_ID ) {

#"NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA"   
										print SALIDA "$hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $_[2]{$Super_ID} \n";		$escribi="true";
                                        #necesarios si no ordeno el archivo por lugares
                                        delete($hashPrecios{$clave});
                                        delete($hashPrecios{$clave});
                                        }
                                }
                        }

                }

                close(LISTA);           
        }

        close(SALIDA);
}

#/home/juan/Documents/facultad/fiuba-7508-1c2014-cuidadopreciosuelto/informes/pres

# ------------------------------------------
# SUB, Idem atnerior pero muestra por pantalla
# ------------------------------------------
sub MostrarMenuDPantalla
{

        for ( my $i=0; $i<=$_[3]; $i++ ){

        print "NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA --> $_[0][$i]\n";
                
                open (LISTA, $_[0][$i]);

                #me creo hashes que tendran los productos como claves
                my %hashPrecios=();
                my %hashLugares=();
                my %hashNumItem=();
                my %hashDescripcion=();

                my @arrayLineaProducto=();


                while($linea = <LISTA>){

		        #obtengo los campos del registro de la lista presupuesteada que estoy analizando 
		        @arrayLineaProducto = split(";", $linea);
			my $Super_provLinea = $_[2]{$arrayLineaProducto[2]};
			#si el super-prov de la linea encaja en el filtro lo imprimo

			$posProv=index($_[1],$Super_provLinea);

			if ( ((("$posProv" >= 0) or ("$_[1]" eq "")) and ( "$Super_provLinea" ne "" )) and ( "$Super_provLinea" ne "" )){
		                #Me fijo si es de precios cuidados y lo salteo.
		                if ( $arrayLineaProducto[2] < 100 ){
		                        next;
		                }
		                #Ahora si no es precio cuidado:
		                #si el producto no esta en el hash lo meto con el precio y el super ID en el otro hash, etc.
		                if (! exists( $hashPrecios{$arrayLineaProducto[1]} ) ) {
		                        $hashPrecios{$arrayLineaProducto[1]}=$arrayLineaProducto[4];
		                        $hashLugares{$arrayLineaProducto[1]}=$arrayLineaProducto[2];
		                        $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
		                        $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
		                }#si esta obviamente comparo y si el precio es mejor reemplazo
		                else{
		                        #COMPARAR PRECIO ; REEMPLAZAR PRECIO Y LUGAR SI CORRESPONDE!!
		                        if ( $hashPrecios{$arrayLineaProducto[1]} > $arrayLineaProducto[4] ){
		                                $hashPrecios{$arrayLineaProducto[1]} = $arrayLineaProducto[4];
		                                $hashLugares{$arrayLineaProducto[1]} = $arrayLineaProducto[2];
		                                $hashNumItem{$arrayLineaProducto[1]}=$arrayLineaProducto[0];
		                                $hashDescripcion{$arrayLineaProducto[1]}=$arrayLineaProducto[3];
		                        }
		                }
			}
                }

                #necesito hacer esta basura o no empieza a recorrer por el ppio de nuevo
                close (LISTA);
                open (LISTA, $_[0][$i]);
                
                #todavia estando en la misma lista de presupuestos
                #recorro de nuevo separando por lugares, mostrando el precio cuidado correspondiente y el menor precio que encontre antes
                my $Super_ID="";
                my $cambioLugar = 0;
		$escribi="false";

                while($linea = <LISTA>){
                        @arrayLineaProducto = split(";", $linea);                    

                        #el lugar viene dado por el super ID
                        if ($Super_ID eq ""){
                                $Super_ID = $arrayLineaProducto[2];
                                $cambioLugar = 1;
                        }else{
                                if ( $Super_ID eq $arrayLineaProducto[2] ){
                                        $cambioLugar = 0;
                                }else{   
					if ($escribi ne "false"){ print "\n";}
                                        $Super_ID = $arrayLineaProducto[2];
                                        $cambioLugar = 1;
					$escribi="false";
                                }
                        }

                        my $observ="";
						
						chomp(%hashPrecios);
                        if ( $cambioLugar ){
                        #recorro hashLugares por claves, si encuentro un value coincidente uso la clave para hash precios e imprimo ; luego elimino ese producto de ambos hashes
                                foreach $clave (sort { $hashNumItem{$a} <=> $hashNumItem{$b} } keys %hashPrecios){

                                        if ( $hashLugares{$clave} eq $Super_ID ) {

#"NRO de ITEM \| PRODUCTO PEDIDO \| PRODUCTO ENCONTRADO \| PRECIO \| NOMBRE_SUPER-PROVINCIA"   
										
                                        print "$hashNumItem{$clave} \| $clave \| $hashDescripcion{$clave} \| $hashPrecios{$clave} \| $_[2]{$Super_ID} \n";			$escribi="true";
                                        #necesarios si no ordeno el archivo por lugares
                                        delete($hashPrecios{$clave});
                                        delete($hashPrecios{$clave});
                                        }
                                }
                        }

                }

                close(LISTA);           
        }

}